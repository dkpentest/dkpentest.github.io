<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on drunk for pentest</title>
    <link>/post/</link>
    <description>Recent content in Posts on drunk for pentest</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Feb 2023 20:47:59 +0800</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MITM_attack</title>
      <link>/post/mitm_attack/</link>
      <pubDate>Mon, 27 Feb 2023 20:47:59 +0800</pubDate>
      
      <guid>/post/mitm_attack/</guid>
      <description>X.509是密码学里公钥证书的格式标准（1988年由ITU-T这个国际组织，总部在日内瓦。类似组织还有3GPP、IETF（发布很多RFC备忘录的那个）等。该组织标准通常以字母+编号命名），已经应用在TLS/SSL在内的很多网络协议里
SSL(secure socket layer 安全协议)是 netscape 网景公司开发的安全协议，用于协商密钥加密通信，包括：
1、握手协议、2、记录协议、3、警报协议
chrome 的证书查看路径：设置/隐私设置和安全性/管理设备证书
存储路径：/etc/ssl/cert.pem, openssl.cnf(.cnf是mysql的配置文件)
证书文件常见格式 常见的证书文件格式有：.crt / .key / .req / .csr / .pem / .der xx.crt：证书文件
&amp;mdash;&amp;ndash;BEGIN CERTIFICATE&amp;mdash;&amp;ndash;
&amp;mdash;&amp;ndash;END CERTIFICATE&amp;mdash;&amp;ndash; xx.key：私钥文件
&amp;mdash;&amp;ndash;BEGIN RSA PRIVATE KEY&amp;mdash;&amp;ndash;
&amp;mdash;&amp;ndash;END RSA PRIVATE KEY&amp;mdash;&amp;ndash; xx.req：请求文件
xx.csr：请求文件 certificate signing request
&amp;mdash;&amp;ndash;BEGIN CERTIFICATE REQUEST&amp;mdash;&amp;ndash;
&amp;mdash;&amp;ndash;END CERTIFICATE REQUEST&amp;mdash;&amp;ndash; xx.pem：证书文件为 pem 格式（文本文件）
xx.der：证书文件为 der 格式（二进制文件）
证书种类 跟证书：ca.crt
跟证书私钥文件：ca.key（由CA生成保管）
验证方式 给服务器颁发证书： 服务器生成公私钥：server.pub server.key
服务器使用公钥生成请求文件：server.req（包含域名、公钥、组织机构）——&amp;gt; 发给CA
CA用私钥 ca.key 和收到的 server.req 生成 server.crt 证书颁发给服务器</description>
    </item>
    
    <item>
      <title>Wireless_bruteforce</title>
      <link>/post/wireless_bruteforce/</link>
      <pubDate>Mon, 27 Feb 2023 20:44:43 +0800</pubDate>
      
      <guid>/post/wireless_bruteforce/</guid>
      <description>此处使用 aircrack-ng 破解附近无线网络
brew install aircrack-ng
这里难点是需要抓包，抓 handshake 包，再用词典破解
查看附近有哪些信号📶（mac自带airport工具）
sudo /System/Library/PrivateFrameworks/Apple80211. framework/Versions/Current/Resources/airport -s
这里 RSSI 绝对值越低信号越强，挑一个信道
sudo airport sniff 6
抓包会生成一个 *.cap 文件，打开文本找handshake在第几行，需要找一个词典来破解
aircrack-ng -w xxx.txt *.cap
最终会显示 keyfound</description>
    </item>
    
    <item>
      <title>Metasploit</title>
      <link>/post/metasploit/</link>
      <pubDate>Mon, 27 Feb 2023 17:16:34 +0800</pubDate>
      
      <guid>/post/metasploit/</guid>
      <description>metasploit 安装 metasploit 分开原版 和 付费pro 版
尝试：brew install metasploit-framework （很慢，失败）
先安装 wget,再下载安装包： brew install wget wget https://osx.metasploit.com/metasploitframework-latest.pkg
双击安装pkg（目录在 /opt/metasploit-framework/bin） 将执行目录添加到环境 vi ～/.bash_profile （此处略）
执行，完成： msfconsole
msf6&amp;gt;
(自带web api服务：https://localhost:5443/api/v1/auth/login）
Metasploit 介绍 1、 discover
- 信息获取
- 端口扫描：Nmap
- 漏洞扫描：neXpose
- 设备扫描
2-3、 gain access &amp;amp; take control - 爆破
- 自动exp
- 手动exp
- 社会工程学
- 网路应用扫描渗透
- get shell
- 会话劫持
- 手动认证
- 防火墙&amp;amp;VPN绕过
4、 collect evidence
- 收集证据、日志、密钥</description>
    </item>
    
  </channel>
</rss>
